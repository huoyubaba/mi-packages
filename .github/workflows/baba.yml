#
# This is free software, lisence use MIT.
# 
# 
#

name: Merge-kenzo
on:
  push:
    paths:
      - '.github/workflows/kenzo.yml'
      - '.gitignore'
      - 'diy/**'
  schedule:
    - cron: 0 */11 * * *
  workflow_dispatch:
    inputs:
      ssh:
        description: 'ssh'
        required: false
        default: 'true'
  watch:
    types: started
  repository_dispatch:

jobs:
  merge:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: Ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set git identity
      run : |
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        sudo timedatectl set-timezone "Asia/Shanghai"

    - name: Syn kenzo
      run: |
        shopt -s extglob
        git rm -r --cache * >/dev/null 2>&1 &
        rm -rf `find ./* -maxdepth 0 -type d ! -name "diy"` >/dev/null 2>&1
        function git_clone() (
          git clone --depth 1 $1 $2 || true
        )
        function git_sparse_clone() (
          branch="$1" rurl="$2" localdir="$3" && shift 3
          git clone -b $branch --depth 1 --filter=blob:none --sparse $rurl $localdir
          cd $localdir
          git sparse-checkout init --cone
          git sparse-checkout set $@
          mv -n $@ ../
          cd ..
          rm -rf $localdir
          )
        function mvdir() {
        mv -n `find $1/* -maxdepth 0 -type d` ./
        rm -rf $1
        }
        (
        git_clone https://github.com/rufengsuixing/luci-app-usb3disable
        git_clone https://github.com/sirpdboy/luci-app-autotimeset
        git clone -b lede https://github.com/pymumu/luci-app-smartdns
        ) &
        (
        svn export https://github.com/Lienol/openwrt-package/branches/other/lean/luci-app-autoreboot
    - name: Delete duplicated packages
      run: |
        shopt -s extglob
        mv -n openwrt-passwall/* ./ ; rm -Rf openwrt-passwall
        mv -n applications/!(luci-app-noddos|luci-app-cshark|luci-app-dnscrypt-proxy|luci-app-https-dns-proxy) ./ ; rm -Rf applications
        mv -n lean/* ./ ; rm -Rf lean
        mv -n openwrt-package/* ./ ; rm -Rf openwrt-package
        cp -rf diy/.packages/* ./ || true
        rm -Rf */.git

    - name: SSH connection to Actions
      uses: kenzok78/debugger-action@master
      if: github.event.inputs.ssh == 'true'

    - name: Apply patches
      run: |
        find "diy/patches" -type f -name '*.patch' -print0 | sort -z | xargs -I % -t -0 -n 1 sh -c "cat '%'  | patch -d './' -p1 -E --forward --no-backup-if-mismatch"

    - name: Modify
      run: |
        shopt -s extglob
        sed -i \
        -e "s/\(network\..*\)\.ifname/\1.device/g" \
        `find \( -path "*/root/*" -o -path "*/files/*" -o -path "*/luasrc/*" \) ! -path "./base-files/*" ! -path "./dnsmasq/*" ! -path "./luci-base/*" ! -path "./ppp/*" -type f` &
        (
        function latest() {
          (curl -gs -H 'Content-Type: application/json' \
             -H "Authorization: Bearer ${{ secrets.REPO_TOKEN }}" \
             -X POST -d '{ "query": "query {repository(owner: \"'"$1"'\", name: \"'"$2"'\"){refs(refPrefix:\"refs/tags/\",last:1,orderBy:{field:TAG_COMMIT_DATE,direction:ASC}){edges{node{name target{commitUrl}}}}defaultBranchRef{target{...on Commit {oid}}}}}"}' https://api.github.com/graphql)
        }
        for pkg in $(ls !(luci-*|natflow|ps3netsrv|rblibtorrent|shadowsocksr-libev|v2ray-core|n2n_v2|mosdns|coremark|mbedtls|rtl8821cu|rtl8188eu|rtl8812au-ac|quickjspp|libcups|netdata)/Makefile); do
          repo="$(grep PKG_SOURCE_URL $pkg | grep github | cut -f 4-5 -d '/' | sed -e 's/.git//' | grep -E '[0-9a-zA-Z_-]+$')" || true
          if [ "$repo" ]; then
            owner="$(echo $repo | cut -f 1 -d '/')"
            name="$(echo $repo | cut -f 2 -d '/')"
            latest="$(latest $owner $name)"
            sed -i "s/PKG_SOURCE_VERSION:=.*/PKG_SOURCE_VERSION:=$(echo $latest | jq -r '.data.repository.defaultBranchRef.target.oid')/" $pkg || true
            over="$(grep -E PKG_VERSION:=.*$ $pkg | cut -f 2 -d '=' | sed -e 's/^\(v\|release-\)//' | grep -E "[0-9]")" || true
            if [ "$over" ]; then
              ver="$(echo $latest | jq -r '.data.repository.refs.edges[-1].node.name' | sed -e 's/^\(v\|release-\)//' | grep -E "^[^()]*$" | grep -E "[0-9]")" || true
              # [ "$ver" ] || ver="$(git ls-remote --tags git://github.com/$repo | cut -d/ -f3- | sort -t. -nk1,3 | awk '/^[^{]*$/{version=$1}END{print version}' | grep -o -E "[0-9].*")" || true
              echo "$repo-$over-$ver"
              if [ "$ver" ]; then
                function version_lt() { test "$(echo "$@" | tr " " "\n" | sort -rV | head -n 1)" != "$1"; }
                if version_lt "$over" "$ver"; then
                  sed -i -e "s/PKG_SOURCE_VERSION:=.*/PKG_SOURCE_VERSION:=$(echo $latest | jq -r '.data.repository.refs.edges[-1].node.target.commitUrl' | cut -f 7 -d /)/" \
                         -e "s/PKG_VERSION:=.*/PKG_VERSION:=$ver/" $pkg || true
                fi || true
              fi
            fi
          fi
        done
        touch /tmp/ok
        ) &
        
        for pkg in $(find -maxdepth 1 -type d -name "luci-*" ! -name "luci-app-dockerman" ! -name "luci-app-frpc" ! -name "luci-app-frps"); do
          grep -q '"nas",' $pkg/luasrc/controller/*.lua && ! grep -q '_("NAS")' $pkg/luasrc/controller/*.lua &&
            sed -i 's/index()/index()\n\tentry({"admin", "nas"}, firstchild(), _("NAS") , 45).dependent = false/' $pkg/luasrc/controller/*.lua
        done
        (
        touch /tmp/ok2
        ) &        
        
        sed -i 's/luci-lib-ipkg/luci-base/g' luci-app-store/Makefile
        bash diy/create_acl_for_luci.sh -a >/dev/null 2>&1 || true
        bash diy/convert_translation.sh -a >/dev/null 2>&1 || true
        
        #sed -i 's?"http://" + window.location.hostname?window.location.protocol + "//" + window.location.hostname?g' `find luci-app*/luasrc/view/ -maxdepth 2 -name "*.htm"`
        rm -f miniupnpd/patches/106-spam-syslog*
        sed -i "/minisign:minisign/d" luci-app-dnscrypt-proxy2/Makefile
        sed -i 's/+libstdcpp/+libstdcpp +zlib/' ngrokc/Makefile
        sed -i 's/+dockerd/+dockerd +cgroupfs-mount/' luci-app-docker*/Makefile
        sed -i '$i /etc/init.d/dockerd restart &' luci-app-docker*/root/etc/uci-defaults/*
        sed -i 's/+rclone\( \|$\)/+rclone +fuse-utils\1/g' luci-app-rclone/Makefile
        sed -i 's/+libcap /+libcap +libcap-bin /' luci-app-openclash/Makefile
        sed -i 's/\(+luci-compat\)/\1 +luci-theme-argon/' luci-app-argon-config/Makefile
        sed -i 's/+vsftpd$/+vsftpd-alt/' luci-app-vsftpd/Makefile
        sed -i 's/ +uhttpd-mod-ubus//' luci-app-packet-capture/Makefile
        sed -i '/boot()/,+2d' ddns-scripts/files/etc/init.d/ddns
        sed -i "/DISTRIB_DESCRIPTION/c\DISTRIB_DESCRIPTION=\"%D %C by kenzo'\"" base-files/files/etc/openwrt_release
        sed -i 's?admin/status/channel_analysis??' luci-mod-status/root/usr/share/luci/menu.d/luci-mod-status.json
        sed -i "/--disable-https/d" netdata/Makefile
        sed -i -e '$a /etc/bench.log' \
        -e '/\/etc\/profile/d' \
        -e '/\/etc\/shinit/d' \
        base-files/files/lib/upgrade/keep.d/base-files-essential
        sed -i -e '/^\/etc\/profile/d' \
        -e '/^\/etc\/shinit/d' \
        base-files/Makefile
        sed -i '$a cgi-timeout = 300' uwsgi/files-luci-support/luci-webui.ini
        sed -i '$a cgi-timeout = 60' uwsgi/files-luci-support/luci-cgi_io.ini
        sed -i '/limit-as/c\limit-as = 5000' uwsgi/files-luci-support/luci-webui.ini
        sed -i 's/procd_set_param stderr 1/procd_set_param stderr 0/' uwsgi/files/uwsgi.init
        cp -rf base-files/files/sbin/sysupgrade my-default-settings/files/sbin/
        
        sed -i \
          -e 's?include \.\./\.\./\(lang\|devel\)?include $(TOPDIR)/feeds/packages/\1?' \
          -e "s/\(PKG_HASH\|PKG_MD5SUM\|PKG_MIRROR_HASH\):=.*/\1:=skip/" \
          -e 's?\.\./\.\./luci.mk?$(TOPDIR)/feeds/luci/luci.mk?' \
          -e 's/ca-certificates/ca-bundle/' \
          */Makefile
        
        while [[ ! -f /tmp/ok ]]; do
            echo "wait"
          sleep 1
        done
        
        rm -rf create_acl_for_luci.warn && rm -rf create_acl_for_luci.ok
        rm -rf create_acl_for_luci.err

    - name: Apply
      run: |
        git add .
        git commit -m "update $(TZ='Asia/Shanghai' date +%m-%d" "%H:%M)"      
        git reset --soft HEAD^
        git add .
        git commit -m "update $(TZ='Asia/Shanghai' date +%m-%d" "%H:%M)"
        git push -f

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 0
